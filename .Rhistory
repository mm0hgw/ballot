lines(dList[[i]],col=col[i],lwd=2)
}
)
legend(leg=names(sbList),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
sbList
GE2010
system('mkdir -p test/pics/fingerprints/')
GE2010 <- splitBallot(get.ballot(ls.ballotTag('Scotland.2010')))
SIR2014 <- splitBallot(get.ballot(ls.ballotTag('Scotland.2014')))
GE2015 <- splitBallot(get.ballot(ls.ballotTag('Scotland.2015')))
sbList <- list(YeSNP2010=GE2010$SNP,
YeSNP2014=SIR2014$Yes,
YeSNP2015=GE2010$SNP
)
dList <- lapply(sbList,sbDensity,norm=FALSE)
arg <- list(x=0,
type='n',
xlim=dListXLim(dList),
ylim=dListYLim(dList)
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/YeSNP.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend(leg=names(sbList),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
system('mkdir -p test/pics/fingerprints/')
GE2010 <- splitBallot(get.ballot(ls.ballotTag('Scotland.2010')))
SIR2014 <- splitBallot(get.ballot(ls.ballotTag('Scotland.2014')))
GE2015 <- splitBallot(get.ballot(ls.ballotTag('Scotland.2015')))
sbList <- list(YeSNP2010=GE2010$SNP,
YeSNP2014=SIR2014$Yes,
YeSNP2015=GE2010$SNP
)
dList <- lapply(sbList,sbDensity,norm=FALSE)
arg <- list(x=0,
type='n',
xlim=dListXlim(dList),
ylim=dListYlim(dList)
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/YeSNP.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend(leg=names(sbList),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
gitPush(';')
sbList
dList
sbList <- list(YeSNP2010=GE2010$SNP,
YeSNP2014=SIR2014$Yes,
YeSNP2015=GE2015$SNP
)
dList <- lapply(sbList,sbDensity,norm=FALSE)
arg <- list(x=0,
type='n',
xlim=dListXlim(dList),
ylim=dListYlim(dList)
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/YeSNP.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend('topright',legend=names(sbList),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
gitPush(';')
dList <- lapply(sbList,sbDensity,norm=TRUE)
arg <- list(x=0,
type='n',
xlim=dListXlim(dList),
ylim=dListYlim(dList),
main='YeSNP faction \'10-\'15',
ylab='Density',
xlab='SDs from Population mean'
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/YeSNP_norm.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend('topright',legend=names(sbList),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
gitPush(';')
sbAbstainers
sbListAbstain <- list(Abstainers.2010=sbAbstainers(GE2010$V),
Abstainers.2014=sbAbstainers(SIR2014$V),
Abstainers.2015=sbAbstainers(GE2015$V)
)
dList <- lapply(sbListAbstain,sbDensity,norm=FALSE)
arg <- list(x=0,
type='n',
xlim=dListXlim(dList),
ylim=dListYlim(dList),
main='Abstainers faction \'10-\'15',
ylab='Density',
xlab='SDs from Population mean'
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/Abstainers.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend('topright',legend=names(sbListAbstain),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
dList <- lapply(sbListAbstain,sbDensity,norm=TRUE)
arg <- list(x=0,
type='n',
xlim=dListXlim(dList),
ylim=dListYlim(dList),
main='Abstainers faction \'10-\'15',
ylab='Density',
xlab='Fractional Turnout'
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/Abstainers_norm.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend('topright',legend=names(sbListAbstain),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
retardPlot <- function(
sb,
norm=FALSE
){
sample <- sbCalculateSample(sb,norm)
lines(sbDensity(sb,norm))
abline(v=sample)
}
gitPush(';')
GE2010U <- GE2010$V
GE2010U[,2] <- GE2010$V[,2] - GE2010$SNP[,2]
GE2015U <- GE2015$V
GE2015U[,2] <- GE2015$V[,2] - GE2015$SNP[,2]
sbListNo <- list( Unionist.2010=GE2010U,
Unionist.2014=GE2014$No,
Unionist.2015=GE2015U
)
dList <- lapply(sbListNo,sbDensity,norm=FALSE)
arg <- list(x=0,
type='n',
xlim=dListXlim(dList),
ylim=dListYlim(dList),
main='Unionist faction \'10-\'15',
ylab='Density',
xlab='Fractional Turnout'
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/Unionist.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend('topright',legend=names(sbListNo),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
dList <- lapply(sbListNo,sbDensity,norm=TRUE)
arg <- list(x=0,
type='n',
xlim=dListXlim(dList),
ylim=dListYlim(dList),
main='Unionist faction \'10-\'15',
ylab='Density',
xlab='SDs from Population mean'
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/Unionist_norm.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend('topright',legend=names(sbListNo),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
gitPush(';')
dList <- lapply(sbListNo,sbDensity,norm=TRUE)
arg <- list(x=0,
type='n',
xlim=dListXlim(dList),
ylim=dListYlim(dList),
main='Unionist faction \'10-\'15',
ylab='Density',
xlab='SDs from Population mean'
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/Unionist_norm.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend('topright',legend=names(sbListNo),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
gitPush(';')
system('mkdir -p test/pics/fingerprints/')
GE2010 <- splitBallot(get.ballot(ls.ballotTag('Scotland.2010')))
SIR2014 <- splitBallot(get.ballot(ls.ballotTag('Scotland.2014')))
GE2015 <- splitBallot(get.ballot(ls.ballotTag('Scotland.2015')))
sbListYes <- list(YeSNP2010=GE2010$SNP,
YeSNP2014=SIR2014$Yes,
YeSNP2015=GE2015$SNP
)
dList <- lapply(sbListYes,sbDensity,norm=FALSE)
arg <- list(x=0,
type='n',
xlim=dListXlim(dList),
ylim=dListYlim(dList),
main='YeSNP faction \'10-\'15',
ylab='Density',
xlab='Fractional Turnout'
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/YeSNP.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend('topright',legend=names(sbListYes),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
dList <- lapply(sbListYes,sbDensity,norm=TRUE)
arg <- list(x=0,
type='n',
xlim=dListXlim(dList),
ylim=dListYlim(dList),
main='YeSNP faction \'10-\'15',
ylab='Density',
xlab='SDs from Population mean'
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/YeSNP_norm.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend('topright',legend=names(sbListYes),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
sbListAbstain <- list(Abstainers.2010=sbAbstainers(GE2010$V),
Abstainers.2014=sbAbstainers(SIR2014$V),
Abstainers.2015=sbAbstainers(GE2015$V)
)
dList <- lapply(sbListAbstain,sbDensity,norm=FALSE)
arg <- list(x=0,
type='n',
xlim=dListXlim(dList),
ylim=dListYlim(dList),
main='Abstainers faction \'10-\'15',
ylab='Density',
xlab='Fractional Turnout'
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/Abstainers.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend('topright',legend=names(sbListAbstain),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
dList <- lapply(sbListAbstain,sbDensity,norm=TRUE)
arg <- list(x=0,
type='n',
xlim=dListXlim(dList),
ylim=dListYlim(dList),
main='Abstainers faction \'10-\'15',
ylab='Density',
xlab='SDs from Population mean'
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/Abstainers_norm.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend('topright',legend=names(sbListAbstain),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
GE2010U <- GE2010$V
GE2010U[,2] <- GE2010$V[,2] - GE2010$SNP[,2]
GE2015U <- GE2015$V
GE2015U[,2] <- GE2015$V[,2] - GE2015$SNP[,2]
sbListNo <- list( Unionist.2010=GE2010U,
Unionist.2014=GE2014$No,
Unionist.2015=GE2015U
)
dList <- lapply(sbListNo,sbDensity,norm=FALSE)
arg <- list(x=0,
type='n',
xlim=dListXlim(dList),
ylim=dListYlim(dList),
main='Unionist faction \'10-\'15',
ylab='Density',
xlab='Fractional Turnout'
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/Unionist.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend('topright',legend=names(sbListNo),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
dList <- lapply(sbListNo,sbDensity,norm=TRUE)
arg <- list(x=0,
type='n',
xlim=dListXlim(dList),
ylim=dListYlim(dList),
main='Unionist faction \'10-\'15',
ylab='Density',
xlab='SDs from Population mean'
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/Unionist_norm.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend('topright',legend=names(sbListNo),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
retardPlot <- function(
sb,
norm=FALSE
){
sample <- sbCalculateSample(sb,norm)
lines(sbDensity(sb,norm))
abline(v=sample)
}
gitPush(';')
dList <- lapply(sbListNo,sbDensity,norm=FALSE)
arg <- list(x=0,
type='n',
xlim=dListXlim(dList),
ylim=dListYlim(dList),
main='Unionist faction \'10-\'15',
ylab='Density',
xlab='Fractional Turnout'
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/Unionist.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend('topright',legend=names(sbListNo),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
sbListNo <- list( Unionist.2010=GE2010U,
Unionist.2014=GE2014$No,
Unionist.2015=GE2015U
)
dList <- lapply(sbListNo,sbDensity,norm=FALSE)
arg <- list(x=0,
type='n',
xlim=dListXlim(dList),
ylim=dListYlim(dList),
main='Unionist faction \'10-\'15',
ylab='Density',
xlab='Fractional Turnout'
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/Unionist.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend('topright',legend=names(sbListNo),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
sbListNo <- list( Unionist.2010=GE2010U,
Unionist.2014=SIR2014$No,
Unionist.2015=GE2015U
)
dList <- lapply(sbListNo,sbDensity,norm=FALSE)
arg <- list(x=0,
type='n',
xlim=dListXlim(dList),
ylim=dListYlim(dList),
main='Unionist faction \'10-\'15',
ylab='Density',
xlab='Fractional Turnout'
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/Unionist.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend('topright',legend=names(sbListNo),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
dList <- lapply(sbListNo,sbDensity,norm=TRUE)
arg <- list(x=0,
type='n',
xlim=dListXlim(dList),
ylim=dListYlim(dList),
main='Unionist faction \'10-\'15',
ylab='Density',
xlab='SDs from Population mean'
)
col <- seq_along(dList)+1
testFile <- paste('test/pics/fingerprints/Unionist_norm.png')
testPng(testFile)
do.call(plot,arg)
lapply(seq_along(dList),
function(i){
lines(dList[[i]],col=col[i],lwd=2)
}
)
legend('topright',legend=names(sbListNo),col=col,lwd=2)
dev.off()
if(buildPackageLoaded)gitAdd(print(testFile))
retardPlot <- function(
sb,
norm=FALSE
){
sample <- sbCalculateSample(sb,norm)
lines(sbDensity(sb,norm))
abline(v=sample)
}
gitPush(';')
source('test/test.R')
source('test/test.R')
source('test/test.R')
source('test/test.R')
source('test/test.R')
source('test/test.R')
source('test/test.R')
z
z.combo <- get.combo(z)
z.combo
z.sbList <- splitBallot(get.ballot(z))
z.sbList
ultraCombo::dataCombo(z.combo,z.sbList[[1]])
z.dc <- ultraCombo::dataCombo(z.combo,z.sbList[[1]])
z.dc
z.dc$dGen(1)
z.dc$dGen
z.dc$Gen(1)
z.dc$dGen(1)
